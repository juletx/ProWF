<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg height="391.0150" name="snapshot" onload="LoadHandler(evt)" onzoom="zoomHandler(evt)" width="726.0" xmlns="http://www.w3.org/2000/svg"><AttributeMap name="Node Type" value="node color"/><defs><marker id="arrowHead-4565549" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(186,85,211)"/></marker><marker id="arrowHead-12156236" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(70,130,180)"/></marker><marker id="arrowHead-3318692" markerHeight="6" markerUnits="strokeWidth" markerWidth="8" orient="auto" refX="10" refY="5" viewBox="0 0 10 10"><path d="M 0 0 L 10 5 L 0 10 z" fill="rgb(205,92,92)"/></marker></defs><g id="displayBean" transform="matrix(1.0493660642028595,0.0,0.0,1.0493660642028595,-17.919881305638,21.302131103318033)"><image visibility="hidden"><![CDATA[ffd8ffe000104a46494600010200000100010000ffdb004300080606070605080707070909080a0c140d0c0b0b0c1912130f141d1a1f1e1d1a1c1c20242e2720222c231c1c2837292c30313434341f27393d38323c2e333432ffdb0043010909090c0b0c180d0d1832211c213232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232323232ffc00011080035006403012200021101031101ffc4001f0000010501010101010100000000000000000102030405060708090a0bffc400b5100002010303020403050504040000017d01020300041105122131410613516107227114328191a1082342b1c11552d1f02433627282090a161718191a25262728292a3435363738393a434445464748494a535455565758595a636465666768696a737475767778797a838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae1e2e3e4e5e6e7e8e9eaf1f2f3f4f5f6f7f8f9faffc4001f0100030101010101010101010000000000000102030405060708090a0bffc400b51100020102040403040705040400010277000102031104052131061241510761711322328108144291a1b1c109233352f0156272d10a162434e125f11718191a262728292a35363738393a434445464748494a535455565758595a636465666768696a737475767778797a82838485868788898a92939495969798999aa2a3a4a5a6a7a8a9aab2b3b4b5b6b7b8b9bac2c3c4c5c6c7c8c9cad2d3d4d5d6d7d8d9dae2e3e4e5e6e7e8e9eaf2f3f4f5f6f7f8f9faffda000c03010002110311003f00f7d91c471b3b670a0938aabfda517f71ff0035ff001a9af3fe3c6e3feb9b7f2aa97734b0fd9fcb7daac87236839e9513972ab95157d097fb4a2fee3fe6bfe347f6945fdc7fcd7fc6b367792e0e5e590718f91ca7f2c54ab793c6a007c851fc4339fa9eb582c4c5f5fc0bf66cbbfda517f71ff35ff1a46d45369da8d9ed92bfe356f72671b973e99ac65bbb96880697395e48502b4a953916ac98c79b64584d466f3be71198b9fbb80dedfc5f4a9ffb4a2fee3fe6bfe35990b49039749a5248c61dcb0fc8d69595c3cbe609594edc10718f5ff0a985653764ff0001ca16d45fed28bfb8ff009aff008d1fda517f71ff0035ff001a6df4f246d11864001073800e7a62b3a7692e0e5a6954e31fbb729fca89d650766c230bab9a7fda517f71ff0035ff001a920bc8e79362ab038cf247f43ef598b773c316164c851c6ee7f33d6b48ff00c8493feb8b7f35aaa7539f54c528f2ee59a28a2b62086f3fe3c6e3feb9b7f2aa37f83f661bd55b61e1b3c8e3d01abd79ff001e371ff5cdbf9551bfe96dfee37fecb59566941dcb87c48cf9a492223646260412763631f981fe454c10b100cb10cf19cb71ff008ed2521fba7e95e74651bec7434edb9bbbb0f82a471f7bb5608ff5419248d86323ef027ff1dae86b9f5fb83e95d78a692574634b7d08a292591cabc3e50033b9db20fb7193ff00eaad5d380412b6e56271c264fafa81542af699f7e6fa2ff5acb0ce3ceac8ba89f2ee49776f2dc2c4630abb41f958e319c7a66ab7f67dd7fd31ff00becff856b515d73a309bbb32539256464369b72ca47ee46463ef9ff0abcdff002124ff00ae2dfcd6acd566ff0090927fd716fe6b4e14e30f844e4e5b9668a28ad0921bcff8f1b8ff00ae6dfca94451cb127991a3e00c6e19c525e7fc78dc7fd736fe55247fea93fdd14808fec96dff003ef17fdf02816b6e082208811df60a9a8a2c82e1509b5b72726de227fdc153514ec043f64b6ff9f78bfef814f8e28e204471aa03d768c53e8a5640145145300aacdff2124ffae2dfcd6acd566ff90927fd716fe6b4981668a28a6035d1648d91beeb020fd2a016600c0b8b8c7fbf45145803ec7ff4f171ff007dd1f63ffa78b8ff00bee8a2959007d8ff00e9e2e3fefba3ec7ff4f171ff007dd14516401f63ff00a78b8ffbee8fb1ff00d3c5c7fdf7451459007d8ffe9e2e3fefba3ec7ff004f171ff7dd14516401f63ffa78b8ff00bee9d15b2c52f99be476c6dcbb67028a28b013d14514c0ffd9]]></image><g id="nodes_and_labels"><rect fill="rgb(249,238,211)" height="500.0" id=":THING" onmousemove="mousemoveHandler(evt)" panelMode="Children" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.634,0.0,0.0,0.634,67.0,16.55000000000001)" visibility="visible" width="933.0"><transform height="0.634" scaleX="67.0" scaleY="16.55000000000001" width="0.0" x="0.634" y="0.0"/><focus>false</focus><title>:THING (System Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.634,0.0,0.0,0.634,67.0,16.55000000000001)" x="28.0" y="28.064453125">:THING<title>:THING (System Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="node" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.13948,0.0,0.0,0.13948,297.698,139.5847840580901)" visibility="visible" width="936.0"><transform height="0.22" scaleX="363.8769716088328" scaleY="194.06117359320203" width="0.0" x="0.22" y="0.0"/><parentId>282</parentId><focus>false</focus><title>node (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.13948,0.0,0.0,0.13948,297.698,139.5847840580901)" x="22.0" y="28.064453125">node<title>node (Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="key" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.13948,0.0,0.0,0.13948,102.90066666666667,139.5847840580901)" visibility="visible" width="936.0"><transform height="0.22" scaleX="56.62565720294427" scaleY="194.06117359320203" width="0.0" x="0.22" y="0.0"/><parentId>282</parentId><focus>false</focus><title>key (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.13948,0.0,0.0,0.13948,102.90066666666667,139.5847840580901)" x="17.0" y="28.064453125">key<title>key (Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="graph" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.13948,0.0,0.0,0.13948,492.4953333333334,55.754048793898036)" visibility="visible" width="936.0"><transform height="0.22" scaleX="671.1282860147214" scaleY="61.83603910709468" width="0.0" x="0.22" y="0.0"/><parentId>282</parentId><focus>false</focus><title>graph (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.13948,0.0,0.0,0.13948,492.4953333333334,55.754048793898036)" x="24.0" y="28.064453125">graph<title>graph (Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="edge" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.13948,0.0,0.0,0.13948,297.698,55.754048793898036)" visibility="visible" width="936.0"><transform height="0.22" scaleX="363.8769716088328" scaleY="61.83603910709468" width="0.0" x="0.22" y="0.0"/><parentId>282</parentId><focus>false</focus><title>edge (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.13948,0.0,0.0,0.13948,297.698,55.754048793898036)" x="22.0" y="28.064453125">edge<title>edge (Class)</title></text><rect fill="rgb(245,224,171)" height="500.0" id="data" onmousemove="mousemoveHandler(evt)" panelMode="Closed" rx="25.0" ry="25.0" stroke="rgb(64,64,64)" stroke-width="2" transform="matrix(0.13948,0.0,0.0,0.13948,102.90066666666667,55.754048793898036)" visibility="visible" width="936.0"><transform height="0.22" scaleX="56.62565720294427" scaleY="61.83603910709468" width="0.0" x="0.22" y="0.0"/><parentId>282</parentId><focus>false</focus><title>data (Class)</title></rect><text fill="black" font-family="Dialog" font-size="12" onmousemove="mousemoveHandler(evt)" text-anchor="middle" transform="matrix(0.13948,0.0,0.0,0.13948,102.90066666666667,55.754048793898036)" x="20.0" y="28.064453125">data<title>data (Class)</title></text></g><g id="arcs"><line marker-end="url(#arrowHead-3318692)" onmousemove="mousemoveHandler(evt)" stroke="rgb(205,92,92)" stroke-width="1" visibility="visible" x1="297.698" x2="233.50466666666665" y1="90.62404879389804" y2="90.62404879389803"><title>dataSlot (Connects Classes): "edge"  to  "data"</title></line><line marker-end="url(#arrowHead-3318692)" onmousemove="mousemoveHandler(evt)" stroke="rgb(205,92,92)" stroke-width="1" visibility="visible" x1="297.698" x2="233.50466666666665" y1="146.35216796706416" y2="118.72666488492392"><title>dataSlot (Connects Classes): "node"  to  "data"</title></line><line marker-end="url(#arrowHead-4565549)" onmousemove="mousemoveHandler(evt)" stroke="rgb(186,85,211)" stroke-width="1" visibility="visible" x1="492.49533333333346" x2="428.302" y1="90.62404879389804" y2="90.62404879389803"><title>edgeSlot (Connects Classes): "graph"  to  "edge"</title></line><line marker-end="url(#arrowHead-12156236)" onmousemove="mousemoveHandler(evt)" stroke="rgb(70,130,180)" stroke-width="1" visibility="visible" x1="492.49533333333346" x2="428.302" y1="118.72666488492388" y2="146.35216796706422"><title>nodeSlot (Connects Classes): "graph"  to  "node"</title></line></g></g><g name="non_display" visibility="hidden" xmlns=""><g name="info" visibility="hidden"><text name="userName">Julen Rojo</text><text name="prjName">vision</text><text name="timeStamp">dom, 26 abr 2020 18:31:51 +0200</text><text name="userComment">[no comment entered]</text><text id="currentScale">1.0493660642028608</text></g><text name="cprels">has subclass|has instance</text><text name="focusedNodeID">-1</text><text height="372.605912596401" name="screenCoord" width="691.8462724935732" x="17.076863753213384" y="-20.299999999999986"/><g id="displayFilters" name="displayFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship filter|Arc Type|java.lang.String</text></g><g id="dataFilters" name="dataFilters"><text id="filter_0" name="filter_0">nominal attribute|artifact type string filter|Node Type|java.lang.String</text><text id="filter_1" name="filter_1">nominal attribute|relationship type string filter|Arc Type|java.lang.String</text></g></g><script><![CDATA[var svgSVGElement;var ZOOM_FACTOR_IN = 1.10;var ZOOM_FACTOR_OUT = 1.0/ZOOM_FACTOR_IN;var ZOOM_DIRECTION_IN = "in"var ZOOM_DIRECTION_OUT = "out"var ZOOM_KEY_IN = "Z"var ZOOM_KEY_OUT = "X"var ZOOM_TIMEOUT = 50; // millisecondsvar zoomFactor;var zoomDirection;var zooming = false;var mouseLocX = 0.0;var mouseLocY = 0.0;var ABSOLUTE_ARC_WIDTH = 2.0;var newScale = 1.0;var newTransX = 0.0;var newTransY = 0.0;function dumpProps(obj, parent) {   for (var i in obj) {      if (parent) { msg = parent + "." + i + "\n" + obj[i]; } else { var msg = i + "\n" + obj[i]; }      if (!confirm(msg)) { return; }      if (typeof obj[i] == "object") {          if (parent) { dumpProps(obj[i], parent + "." + i); } else { dumpProps(obj[i], i); }      }   }}function LoadHandler (evt) { 	if ( window.svgDocument == null ) {		svgDocument = evt.target.ownerDocument;	}	svgSVGElement = svgDocument.getDocumentElement();	new Title (svgDocument, 12); 	var currentScale = svgDocument.getElementById("currentScale");	var cscale = currentScale.getFirstChild().getNodeValue();	//alert("displaybean scale "+cscale);	var svgscale = svgSVGElement.getCurrentScale();	//alert("svg startup scale "+svgscale);	adjustArcWidths(cscale);// 	setTimeout('adjustArcWidths(cscale)', 10);	 }  function zoomHandler(evt) { 	Title_Zoom(evt);		var cscale = svgSVGElement.getCurrentScale();	//alert("zooming...true svg scale: "+ cscale);	adjustArcWidths(cscale);// 	setTimeout("adjustArcWidths(csale)", 100);	//setTimeout('adjustCommentBox()', 100); }  // update the thickness of the arcs so that they always appear the  // same thickness no matter what the current scale is  function adjustArcWidths (cs) {	//alert("pass in scale " + cs); 	// look for line elements	var lineElements = svgDocument.getElementsByTagName ("line");//	var cs = svgSVGElement.getCurrentScale();	if((cs<=1)){	   return;	}	if(cs>=2){	   cs = cs*2;		}	var newStrokeWidth = ABSOLUTE_ARC_WIDTH/cs;	for (var i = 0; i<lineElements.getLength(); i++) {		var lineElement = lineElements.item(i);		var strokeWidth = lineElement.getAttribute ("stroke-width");		// do not let stroke too thick 		if(newStrokeWidth>=0.4){		  newStrokeWidth = 0.1;		}		if(newStrokeWidth<=0.1){		  newStrokeWidth = 0.2;		}			   lineElement.setAttribute ("stroke-width", "" + newStrokeWidth);	}//   	alert("draw stroke width: " + newStrokeWidth); }   function adjustCommentBox () {	var commentTransElement = svgDocument.getElementById ("commentTranslate");	var commentScaleElement = svgDocument.getElementById ("commentScale");  	var currSVGScale = svgSVGElement.currentScale;	var newCommentScale = 1.0/currSVGScale;	var currSVGTransX = svgSVGElement.currentTranslate.x	var currSVGTransY = svgSVGElement.currentTranslate.y	var newCommentTransX =  - currSVGTransX;	var newCommentTransY =  - currSVGTransY;	commentScaleElement.setAttribute("transform", "scale(" + newCommentScale + ")");	commentTransElement.setAttribute("transform", "translate(" + newCommentTransX + "," + newCommentTransY + ")"); }  function keyupHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "up";	if (zooming && zoomDirection == ZOOM_DIRECTION_IN && input_text == ZOOM_KEY_IN) {  		// zoom in  		zooming = false;	} else if (zooming && zoomDirection == ZOOM_DIRECTION_OUT && input_text == ZOOM_KEY_OUT) {		// zoom out  		zooming = false;	} else {		// do nothing	}}function keydownHandler (keyEvent) {	// Get the character-code of the key that was pressed.	var key = keyEvent.keyCode;	// Get string equivalent of input character-code.	var input_text = String.fromCharCode(key);	//window.status = input_text + "down";	if (input_text == ZOOM_KEY_IN) {  		// start zooming in  		zoomDirection = ZOOM_DIRECTION_IN;  		zoomFactor = ZOOM_FACTOR_IN;  		zooming = true;	} else if (input_text == ZOOM_KEY_OUT) {		// start zooming out		zoomDirection = ZOOM_DIRECTION_OUT  		zoomFactor = ZOOM_FACTOR_OUT;  		zooming = true;	} else {		zooming = false;	}	// keep zooming until a keyup event is thrown	//if (zooming) {		//setTimeout('zoomOneStep()', ZOOM_TIMEOUT);	//}	zoomOneStep();}function mousemoveHandler (evt) {		mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();	var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;	var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	//window.status = scaleAndTransform + "  -  " + mouseLocationTransformed + "  -  " + mouseLocationAbsolute;	Title.Activate(evt);}function zoomOneStep () {  	var oldScale = svgSVGElement.currentScale;  	var oldTransX = svgSVGElement.currentTranslate.x  	var oldTransY = svgSVGElement.currentTranslate.y  	newScale = oldScale; 	newTransX = oldTransX; 	newTransY = oldTransY; 	var oldAbsoluteX = (mouseLocX - oldTransX) / oldScale;	var oldAbsoluteY = (mouseLocY - oldTransY) / oldScale;  	newScale = oldScale * zoomFactor;	// we want the absolute point under the mouse to stay in the same place	//ie. the absolute position of the mouse should be the same when done	newTransX = mouseLocX - newScale * oldAbsoluteX;	newTransY = mouseLocY - newScale * oldAbsoluteY;		// set the new scale and translation  	svgSVGElement.currentScale = newScale;	svgSVGElement.currentTranslate.x = newTransX;  	svgSVGElement.currentTranslate.y = newTransY;}// == Title.js -- Copyright (C) Stefan Goessner ========================function Title(doc, sz) {   this.element = null;  // element to show title of ..   Title.size = sz;      // text size ..   Title.oldScale = document.getDocumentElement().getCurrentScale();     // scaling modified by zooming ..   this.Create(doc);   AddTitleEvents(doc.getDocumentElement());   window.svgTitle = this;}Title.prototype.Create = function(doc){   this.rec = doc.createElement("rect");   this.rec.setAttribute("y", -0.9*Title.size);   this.rec.setAttribute("x", -0.25*Title.size);   this.rec.setAttribute("width", "1");   this.rec.setAttribute("height", 1.25*Title.size);   this.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:1");   this.str = doc.createTextNode("");   this.txt = doc.createElement("text")   this.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");   this.txt.appendChild(this.str);   this.grp = doc.createElement("g"),   this.grp.setAttribute("transform", "translate(0,0)");   this.grp.setAttribute("visibility", "hidden");   this.grp.appendChild(this.rec);   this.grp.appendChild(this.txt);   doc.getDocumentElement().appendChild(this.grp);}Title.Activate = function Title_Activate(evt) {	mouseLocX = evt.getClientX();	mouseLocY = evt.getClientY();		var currScale = svgSVGElement.currentScale;	var currTransX = svgSVGElement.currentTranslate.x;	var currTransY = svgSVGElement.currentTranslate.y;	var absoluteX = (mouseLocX - currTransX) / currScale;	var absoluteY = (mouseLocY - currTransY) / currScale;		var scaleAndTransform = "scale: " +  svgSVGElement.currentScale + "  translate: " + svgSVGElement.currentTranslate.x + "," + svgSVGElement.currentTranslate.y;	var mouseLocationTransformed = "mouseLocation (transformed): " + mouseLocX + "," + mouseLocY;	var mouseLocationAbsolute = "mouseLocation (absolute): " + absoluteX + "," + absoluteY;	var x = (evt.getClientX() - document.getDocumentElement().getCurrentTranslate().getX())/document.getDocumentElement().getCurrentScale() +  0.25*Title.size;	    var y = (evt.getClientY() - document.getDocumentElement().getCurrentTranslate().getY())/document.getDocumentElement().getCurrentScale() - Title.size;	window.svgTitle.element = evt.getCurrentTarget();	window.svgTitle.str.setNodeValue(TextOf(TitleElementOf(window.svgTitle.element)));	window.svgTitle.rec.setAttribute("width", window.svgTitle.txt.getComputedTextLength() + 0.5*Title.size);	window.svgTitle.grp.setAttribute("transform", "translate(" + x + "," + y + ")");	window.svgTitle.grp.setAttribute("visibility", "visible");}Title.Zoom = function Title_Zoom(evt) {   var newscl = evt.getTarget().getOwnerDocument().getDocumentElement().getCurrentScale();   Title.size *= Title.oldScale/newscl;   //alert ("Title.size: " + Title.size);   Title.oldScale = newscl;   window.svgTitle.rec.setAttribute("y", -0.9*Title.size);   window.svgTitle.rec.setAttribute("x", -0.25*Title.size);   window.svgTitle.rec.setAttribute("height", 1.25*Title.size);   window.svgTitle.rec.setAttribute("style", "stroke:black;fill:#edefc2;stroke-width:" + 1/document.getDocumentElement().getCurrentScale());   window.svgTitle.txt.setAttribute("style", "font-family:Arial; font-size:" + Title.size + ";fill:black;");}Title.Register = function Title_Register(elem) {   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// --- local helper functions ------------------------function TitleElementOf(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1 && childs.item(i).getNodeName() == "title") // title element ..         return childs.item(i);      return null;}function TextOf(elem) {   var childs = elem ? elem.getChildNodes() : null;   for (var i=0; childs && i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 3) // text node ..         return childs.item(i).getNodeValue();      return "";}function AddTitleEvents(elem) {   var childs = elem.getChildNodes();   for (var i=0; i<childs.getLength(); i++)      if (childs.item(i).getNodeType() == 1) // element node ..         AddTitleEvents(childs.item(i));   if (TitleElementOf(elem) != null)      elem.addEventListener("mousemove", Title.Activate, false);}// === end ======================================================]]></script></svg>